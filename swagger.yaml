---
openapi: 3.0.1
info:
  title: 일정관리 API Document
  description: '내일배움캠프 스프링 숙련과제 일정관리 앱 Develop

    '
  contact:
    email: mxcoogi@gmail.com
  version: '1.0'
servers:
  - url: http://localhost:8080
tags:
  - name: 테스트
    description: 테스트 관련 API
paths:
  "/users":
    put:
      tags:
        - user-controller
      operationId: updateUser
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              "$ref": "#/components/schemas/UpdateRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                "$ref": "#/components/schemas/UserResponseDto"
    delete:
      tags:
        - user-controller
      operationId: deleteUser
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              "$ref": "#/components/schemas/DeleteRequestDto"
        required: true
      responses:
        '200':
          description: OK
  "/schedules/{scheduleId}":
    get:
      tags:
        - schedule-controller
      operationId: findSchedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                "$ref": "#/components/schemas/ScheduleResponseDto"
    put:
      tags:
        - schedule-controller
      operationId: updateSchedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              "$ref": "#/components/schemas/UpdateRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                "$ref": "#/components/schemas/ScheduleResponseDto"
    delete:
      tags:
        - schedule-controller
      operationId: deleteSchedule
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  "/schedules/{scheduleId}/comments/{commentId}":
    put:
      tags:
        - comment-controller
      operationId: updateComment
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              "$ref": "#/components/schemas/CommentRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                "$ref": "#/components/schemas/CommentResponseDto"
    delete:
      tags:
        - comment-controller
      operationId: deleteComment
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  "/schedules":
    get:
      tags:
        - schedule-controller
      operationId: findAllSchedule
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                "$ref": "#/components/schemas/ScheduleAllResponseDto"
    post:
      tags:
        - schedule-controller
      operationId: createSchedule
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              "$ref": "#/components/schemas/CreateRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                "$ref": "#/components/schemas/ScheduleResponseDto"
  "/schedules/{scheduleId}/comments":
    post:
      tags:
        - comment-controller
      operationId: createComment
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              "$ref": "#/components/schemas/CommentRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                "$ref": "#/components/schemas/CommentResponseDto"
  "/auth/sign-up":
    post:
      tags:
        - auth-controller
      operationId: signUp
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              "$ref": "#/components/schemas/SignUpRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                "$ref": "#/components/schemas/SignUpResponseDto"
  "/auth/logout":
    post:
      tags:
        - auth-controller
      operationId: login
      responses:
        '200':
          description: OK
  "/auth/login":
    post:
      tags:
        - auth-controller
      operationId: login_1
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              "$ref": "#/components/schemas/LoginRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                type: integer
                format: int64
  "/users/{userId}":
    get:
      tags:
        - user-controller
      operationId: findUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                "$ref": "#/components/schemas/UserResponseDto"
  "/test":
    get:
      tags:
        - 테스트
      summary: 테스트메서드
      description: 테스트메서드입니다
      operationId: test
      responses:
        '200':
          description: 테스트 성공
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
        '500':
          description: 서버 에러
          content:
            application/json;charset=UTF-8:
              schema:
                type: string
components:
  schemas:
    UpdateRequestDto:
      required:
        - updateUserName
      type: object
      properties:
        updateUserName:
          type: string
    UserResponseDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        userName:
          type: string
        userEmail:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CommentResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        contents:
          type: string
        userName:
          type: string
        scheduleId:
          type: integer
          format: int64
        createAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ScheduleResponseDto:
      type: object
      properties:
        scheduleId:
          type: integer
          format: int64
        scheduleTitle:
          type: string
        scheduleContents:
          type: string
        userName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        commentList:
          type: array
          items:
            "$ref": "#/components/schemas/CommentResponseDto"
    CommentRequestDto:
      type: object
      properties:
        contents:
          type: string
    CreateRequestDto:
      required:
        - scheduleTitle
      type: object
      properties:
        scheduleTitle:
          type: string
        scheduleContents:
          type: string
    SignUpRequestDto:
      required:
        - userName
        - userPassword
      type: object
      properties:
        userName:
          type: string
        userEmail:
          type: string
        userPassword:
          type: string
    SignUpResponseDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        userName:
          type: string
        userEmail:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    LoginRequestDto:
      required:
        - userPassword
      type: object
      properties:
        userEmail:
          type: string
        userPassword:
          type: string
    ScheduleAllResponseDto:
      type: object
      properties:
        totalPage:
          type: integer
          format: int32
        scheduleResponseDtoList:
          type: array
          items:
            "$ref": "#/components/schemas/ScheduleResponseDto"
    DeleteRequestDto:
      required:
        - userPassword
      type: object
      properties:
        userPassword:
          type: string
